@page "/game"
@inject IClient _httpClient

<h3>Game</h3>

    <button class="btn btn-primary" @onclick="StartGame">Guess</button>


@*     <div class="card-body">
        <EditForm Model="GuessModel" OnValidSubmit="HandleGuess">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email Address</label>
                <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
                <ValidationMessage For="@(() => RegistrationModel.Email)" />
            </div>
            <div class="form-group">
                <label for="email">First Name</label>
                <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
                <ValidationMessage For="@(() => RegistrationModel.FirstName)" />
            </div>
            <div class="form-group">
                <label for="email">Last Name</label>
                <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
                <ValidationMessage For="@(() => RegistrationModel.LastName)" />
            </div>
            <div class="form-group">
                <label for="email">Username</label>
                <InputText class="form-control" @bind-Value="RegistrationModel.UserName" />
                <ValidationMessage For="@(() => RegistrationModel.UserName)" />
            </div>
            <div class="form-group">
                <label for="email">Password</label>
                <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
                <ValidationMessage For="@(() => RegistrationModel.Password)" />
            </div>

            <button type="submit" class="btn btn-primary btn-block">Submit Guess</button>
        </EditForm>
    </div> *@


@code {
    public async void StartGame() 
    {
        var gameCreateDto = new GameCreateDto();

        await _httpClient.CreateGameAsync(gameCreateDto);
    }
}
